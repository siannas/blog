<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Siannas Blog]]></title><description><![CDATA[simple blog.]]></description><link>https://siannas.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 30 Jan 2023 07:40:01 GMT</lastBuildDate><item><title><![CDATA[No title]]></title><description><![CDATA[<p>. . . Pada bagian kedua ini akan membahas cara membuat garis dan memprogram aturan permainannya. Buat yang belum lihat bagian pertama, sok langsung ke sini [Link]. E. Menggambar Garis 1. Buat Canvas baru dengan cara klik kanan &gt; UI &gt; Canvas dan beri nama &#8220;Draw Canvas&#8221;. Kemudian dalam &#8220;Draw Canvas&#8221; buat UI Image baru [&hellip;]</p>
]]></description><link>https://siannas.github.io/blog/2022/12/27/happy-glass-clone-pt-2/</link><guid isPermaLink="false">https://siannas.github.io/blog/2022/12/27/happy-glass-clone-pt-2/</guid></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Sudah minum belum? mungkin ini pesan tersirat dari gim berjudul &#8220;Happy Glass&#8221; yang mengajak kita membantu mengisi segelas air penuh hanya dengan bantuan garis yang kita gambar. Sekilas info, gim ini adalah gim karya studio Game5mobile yang udah diunduh sebanyak 100&nbsp;juta pengguna lebih, gokil gak sih&#8230; yang mau main, cus download di sini [Link]. Nah [&hellip;]</p>
]]></description><link>https://siannas.github.io/blog/2022/12/22/happy-glass-clone-pt-1/</link><guid isPermaLink="false">https://siannas.github.io/blog/2022/12/22/happy-glass-clone-pt-1/</guid></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Gim heisters adalah gim aksi tactical dimana player akan merampok markas musuh bersama tiga karakter lainnya yang akan membantu. Perlu diketahui sebelumnya pada program heister, setiap karakter dipasang bit kondisi. Sebagai contoh kondisi “kehabisan peluru” pada bit pertama, kondisi “mendengar suara yang mencurigakan” pada bit kedua. Namun jumlah kondisi yang bisa dipasang maksimal sejumlah panjang [&hellip;]</p>
]]></description><link>https://siannas.github.io/blog/2022/12/12/squad-condition-dalam-gim-heisters/</link><guid isPermaLink="false">https://siannas.github.io/blog/2022/12/12/squad-condition-dalam-gim-heisters/</guid></item><item><title><![CDATA[No title]]></title><description><![CDATA[<p>Penggunaan Hierarichal Finite State Machine (HFSM) berdasar apa yang saya ketahui ini adalah kumpulan dari beberapa low-level Finite State Machine (FSM) dengan cabang-cabang kondisi yang menentukan FSM mana yang akan digunakan dan kapan harus transisi ke FSM yang lainnya. Saya belajar tentang HFSM melalui video Youtube dan mengekplorasi program half-life 2 yang ada di github [&hellip;]</p>
]]></description><link>https://siannas.github.io/blog/2022/12/08/hierarichal-finite-state-machine-di-game-heisters/</link><guid isPermaLink="false">https://siannas.github.io/blog/2022/12/08/hierarichal-finite-state-machine-di-game-heisters/</guid></item></channel></rss>